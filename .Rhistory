output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 7)
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
debug <- FALSE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- FALSE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
input <- read_csv("aoc_data/day_5.csv",
col_names = FALSE)
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
output <- list(prog = vec, index = 1, input = 5)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
df_1 <- data.frame(
x = replicate(
n = 10, expr = runif(n = 1000, min = 20, max = 100)
)
)
library(dplyr)
df_1 |>
(\(x) cbind(x, r = apply(x[colnames(x = select(x, where(is.numeric) & head(x = everything(x), 2) & starts_with("x.")))], 1, sum, na.rm = T)))()
df_1 <- data.frame(
x = replicate(
n = 10, expr = runif(n = 1000, min = 20, max = 100)
)
)
data.frame(
x = replicate(
n = 10, expr = runif(n = 1000, min = 20, max = 100)
)
)
select(x, where(is.numeric) & head(x = everything(x), 2) & starts_with("x."))
select(df_1, where(is.numeric) & head(x = everything(x), 2) & starts_with("x."))
select(df_1, where(is.numeric) & head(df_1 = everything(df_1), 2) & starts_with("x."))
head(df_1 = everything(df_1), 2)
starts_with("x.")
df1 <- readr::read_table("Last Name First Name ID
Clay      Cassius    1
Alcindor  Lou        2
Artest    Ron        3
Jordan    Michael    4
Scottie   Pippen     5
Kanter    Enes       6")
df1 <- readr::read_table("Last_Name First_Name ID
Clay      Cassius    1
Alcindor  Lou        2
Artest    Ron        3
Jordan    Michael    4
Scottie   Pippen     5
Kanter    Enes       6")
df1
df2 <- readr::read_table("Last_Name   First_Name   ID
Ali          Muhammad       1
Abdul_Jabbar Kareem         2
World_Peace  Metta          3
Jordan       Michael        4
Pippen       Scottie        5
Freedom      Enes_Kanter    6")
library(stringr)
library(dplyr)
df2 <-
df2 %>% mutate(across(everything(), ~str_replace("_", " ")))
df2 <-
df2 %>% mutate(across(everything(), ~str_replace(., "_", " ")))
df2
df1 %>%
left_join(df2, by = "ID")
df2
df2 <- readr::read_table("Last_Name   First_Name   ID
Ali          Muhammad       1
Abdul_Jabbar Kareem         2
World_Peace  Metta          3
Jordan       Michael        4
Pippen       Scottie        5
Freedom      Enes_Kanter    6")
df2 <-
df2 %>% mutate(across(1:2, ~str_replace(., "_", " ")))
df2
df1 %>%
left_join(df2, by = "ID")
df1 %>%
left_join(df2, by = "ID", prefix = c("", ".y"))
df1 %>%
left_join(df2, by = "ID", suffix = c("", ".y"))
df1 %>%
left_join(df2, by = "ID", suffix = c("", ".y")) %>%
mutate(Discrepancies = ifelse(Last_Name.y == Last_Name, "", Last_Name.y))
df1 %>%
left_join(df2, by = "ID", suffix = c("", ".y")) %>%
mutate(Discrepancies = ifelse(Last_Name.y == Last_Name, "", Last_Name.y)) %>%
select(ends_with(".y"))
df1 %>%
left_join(df2, by = "ID", suffix = c("", ".y")) %>%
mutate(Discrepancies = ifelse(Last_Name.y == Last_Name, "", Last_Name.y)) %>%
select(-ends_with(".y"))
df_1 <- data.frame(
x = replicate(
n = 10, expr = runif(n = 1000, min = 20, max = 100)
)
)
df_1 |>
(\(x) cbind(x, r = apply(x[colnames(x = select(x, where(is.numeric) & head(x = everything(x), 2) & starts_with("x.")))], 1, sum, na.rm = T)))()
sum(df_1[1,])
df_1[colnames(df_1 = select(df_1, where(is.numeric) & head(df_1 = everything(x), 2) & starts_with("x.")))]
df_1[colnames(df_1 = select(df_1, where(is.numeric) & head(df_1 = everything(df_1), 2) & starts_with("x.")))]
dat<-structure(list(name = c("Easy On Me", "All I Want For Christmas Is You",
"Overseas (feat. Central Cee)", "Last Christmas", "Shivers"),
releaseDate = c("2021-10-15", "1994-10-29", "2021-11-18",
"1984-01-01", "2021-09-09"), kind = c("songs", "songs", "songs",
"songs", "songs"), artistId = c("262836961", "91853", "1240341559",
"548421", "183313439"), artistUrl = c("https://music.apple.com/gb/artist/adele/262836961",
"https://music.apple.com/gb/artist/mariah-carey/91853", "https://music.apple.com/gb/artist/d-block-europe/1240341559",
"https://music.apple.com/gb/artist/wham/548421", "https://music.apple.com/gb/artist/ed-sheeran/183313439"
), artworkUrl100 = c("https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/73/6d/7c/736d7cfb-c79d-c9a9-4170-5e71d008dea1/886449666430.jpg/100x100bb.jpg",
"https://is4-ssl.mzstatic.com/image/thumb/Music124/v4/c6/b7/27/c6b727f7-3a32-6b43-cee2-05bb71daf1cf/dj.itfmdeif.jpg/100x100bb.jpg",
"https://is1-ssl.mzstatic.com/image/thumb/Music126/v4/2e/63/01/2e6301ee-905d-5ae8-c989-eaf9d8e7e6ae/21UM1IM30658.rgb.jpg/100x100bb.jpg",
"https://is1-ssl.mzstatic.com/image/thumb/Music125/v4/47/55/0c/47550cd6-7ef5-bf86-c194-c7695d63c759/dj.xuditatj.jpg/100x100bb.jpg",
"https://is1-ssl.mzstatic.com/image/thumb/Music125/v4/c5/d8/c6/c5d8c675-63e3-6632-33db-2401eabe574d/190296491412.jpg/100x100bb.jpg"
), genres = list(structure(list(genreId = c("14", "34"),
name = c("Pop", "Music"), url = c("https://itunes.apple.com/gb/genre/id14",
"https://itunes.apple.com/gb/genre/id34")), class = "data.frame", row.names = 1:2),
structure(list(genreId = c("34", "21", "17", "15", "14"
), name = c("Music", "Rock", "Dance", "R&B/Soul", "Pop"
), url = c("https://itunes.apple.com/gb/genre/id34",
"https://itunes.apple.com/gb/genre/id21", "https://itunes.apple.com/gb/genre/id17",
"https://itunes.apple.com/gb/genre/id15", "https://itunes.apple.com/gb/genre/id14"
)), class = "data.frame", row.names = c(NA, 5L)), structure(list(
genreId = c("18", "34"), name = c("Hip-Hop/Rap",
"Music"), url = c("https://itunes.apple.com/gb/genre/id18",
"https://itunes.apple.com/gb/genre/id34")), class = "data.frame", row.names = 1:2),
structure(list(genreId = c("14", "34", "17"), name = c("Pop",
"Music", "Dance"), url = c("https://itunes.apple.com/gb/genre/id14",
"https://itunes.apple.com/gb/genre/id34", "https://itunes.apple.com/gb/genre/id17"
)), class = "data.frame", row.names = c(NA, 3L)), structure(list(
genreId = c("14", "34"), name = c("Pop", "Music"),
url = c("https://itunes.apple.com/gb/genre/id14",
"https://itunes.apple.com/gb/genre/id34")), class = "data.frame", row.names = 1:2))), row.names = c(NA,
5L), class = "data.frame")
dat
View(dat)
dat$genres
library(purrr)
dat %>%
pull(genres)
dat$genres[[5]]
dat$genres[[5]] %>%
summarise(count = sum(name == "Pop"))
dat %>%
pull(genres) %>%
map_dbl(summarise(count = sum(name == "Pop")))
dat %>%
pull(genres) %>%
map_dbl(summarise(.x, count = sum(name == "Pop")))
dat %>%
pull(genres) %>%
map_dbl(summarise(.x, count = sum(name == "Pop")))
dat %>%
pull(genres) %>%
map_dbl(summarise(., count = sum(name == "Pop")))
dat %>%
pull(genres) %>%
map_dbl(.x %>%
summarise(count = sum(name == "Pop")))
library(purrr)
dat %>%
pull(genres) %>%
map_dbl(.x %>%
summarise(count = sum(name == "Pop")))
dat %>%
pull(genres)
dat %>%
pull(genres) %>%
map_dbl(~.x %>%
summarise(count = sum(name == "Pop")))
dat %>%
pull(genres) %>%
map_dbl(~sum(.x[name] == "Pop")))
dat %>%
pull(genres) %>%
map_dbl(~sum(.x[name] == "Pop"))
dat %>%
pull(genres) %>%
map_dbl(~sum(.x["name"] == "Pop"))
dat %>%
pull(genres) %>%
map_dbl(~sum(.x["name"] == "Pop")) %>%
sum()
a <- 1:4
a[7] <- 1
library(tidyverse)
input <- read_csv("aoc_data/day_5.csv",
col_names = FALSE)
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
debug <- FALSE
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
# vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
#          1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
#          999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- FALSE
output <- list(prog = vec, index = 1, input = 5)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
vec <- c(104,1125899906842624,99)
output <- list(prog = vec, index = 1, input = 5, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
if (output[["breaker"]]) { break }
}
vec <- c(1102,34915192,34915192,7,4,7,99,0)
output <- list(prog = vec, index = 1, input = 5, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
if (output[["breaker"]]) { break }
}
vec <- c(109,1,204,-1,1001,100,1,100,1008,100,16,101,1006,101,0,99)
output <- list(prog = vec, index = 1, input = 5, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
if (output[["breaker"]]) { break }
}
output
output[["prog"]]
vec <- c(109,1,204,-1,1001,100,1,100,1008,100,16,101,1006,101,0,99)
output <- list(prog = vec, index = 1, input = 5, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
input <- read_csv("aoc_data/day_9.csv",
col_names = FALSE)
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
debug <- FALSE
output <- list(prog = vec, index = 1, input = 5, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
output
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
debug <- FALSE
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
output
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
output
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
debug <- TRUE
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
input <- read_csv("aoc_data/day_9.csv",
col_names = FALSE)
input
input %>%
slice(1)
input %>%
slice(1) %>%
as.numeric()
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
debug <- TRUE
output <- list(prog = vec, index = 1, input = 1, base = 0)
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
output
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
output
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
debug <- TRUE
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
debug <- TRUE
output <- list(prog = vec, index = 1, input = 1, base = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(
output[["prog"]],
output[["index"]],
output[["input"]],
output[["base"]]
)
output[["prog"]][is.na(output[["prog"]])] <- 0
if (output[["breaker"]]) { break }
}
output
test <- read_lines("10 ORE => 10 A
1 ORE => 1 B
7 A, 1 B => 1 C
7 A, 1 C => 1 D
7 A, 1 D => 1 E
7 A, 1 E => 1 FUEL")
# Advent of Code 2019
# Day 14: Space Stoichiometry ----
library(tidyverse)
test <- read_lines("10 ORE => 10 A
1 ORE => 1 B
7 A, 1 B => 1 C
7 A, 1 C => 1 D
7 A, 1 D => 1 E
7 A, 1 E => 1 FUEL")
str_extract_all(test, "(?<=\\d{1,2}\\s)\\w{1,4}", simplify = TRUE) %>%
as.vector() %>%
unique()
incred <-
test %>%
str_extract_all("(?<=\\d{1,2}\\s)\\w{1,4}", simplify = TRUE) %>%
as.vector() %>%
unique()
incred <- incred[incred != '']
test %>%
as.data.frame() %>%
separate(., col=`.`, into=c('input', 'output'), sep='=>')
list("FUEL" = list("A", "E"))
list("FUEL" = list("A" = 7, "E" = 1))
list("FUEL" = list(c("A" = 7, "E" = 1)))
list("FUEL" = c("A" = 7, "E" = 1))
liste <- list("FUEL" = c("A" = 7, "E" = 1))
liste$FUEL
liste$FUEL[["A"]]
incred
test %>%
as.data.frame() %>%
separate(., col=`.`, into=c('input', 'output'), sep='=>')
test %>%
as.data.frame() %>%
separate(., col = ".", into = c("input", "output"), sep = "=>")
