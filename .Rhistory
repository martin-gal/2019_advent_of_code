} else if (prog[idx] == 4) {
# Wert ausgeben (ein Parameter)
print(prog[prog[idx + 1] + 1])
return(list(prog = prog, index = idx + 2))
} else if (opcode == 99) {
# Programm beenden
# Wird nie ausgef端hrt, da die Abfrage in der Schleife schon auf 99 pr端ft und dann die
# Schleife stoppt
message("Programm erfolgreich beendet.")
return(list(prog = prog, index = idx))
} else {
stop("Fehler!")
}
}
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
print(output[["index"]])
if (output[[1]][[output[[2]]]] == 99) { break }
}
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
print(output[["index"]])
if (output[[1]][[output[[2]]]] == 99) { break }
}
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
print(output[["index"]])
if (output[["breaker"]]) { break }
}
intcode_comp <- function(prog, idx, input = NULL) {
# ABCDE
# DE - OpCode
# C  - Parameter 1
# B  - Parameter 2
# A  - Parameter 3
#
# Parameter: 0 == position mode, 1 == immediate mode (d.h. Wert auslesen)
opcode <- prog[idx] %% 100
para_c <- prog[idx] %% 1000 %/% 100
para_b <- prog[idx] %% 10000 %/% 1000
para_a <- prog[idx] %% 100000 %/% 10000
# Parameter vorbereiten
if (para_c == 0) {
parameter_1 <- prog[prog[idx + 1] + 1]
} else if (para_c == 1){
parameter_1 <- prog[idx + 1]
}
if (para_b == 0) {
parameter_2 <- prog[prog[idx + 2] + 1]
} else if (para_b == 1){
parameter_2 <- prog[idx + 2]
}
if (para_a == 0) {
parameter_3 <- prog[prog[idx + 3] + 1]
} else if (para_a == 1){
parameter_3 <- prog[idx + 3]
}
print(paste0("OpCode: ", opcode))
# Addition (drei Parameter)
if (opcode == 1) {
if (para_a == 0) {
prog[prog[idx + 3] + 1] <- parameter_1 + parameter_2
} else if (para_a == 1){
prog[idx + 3] <- parameter_1 + parameter_2
}
# prog[prog[idx + 3] + 1] <- parameter_1 + parameter_2
return(list(prog = prog, index = idx + 4, breaker = NULL))
} else if (opcode == 2) {
# Multiplikation (drei Parameter)
if (para_a == 0) {
prog[prog[idx + 3] + 1] <- parameter_1 * parameter_2
} else if (para_a == 1){
prog[idx + 3] <- parameter_1 * parameter_2
}
return(list(prog = prog, index = idx + 4, breaker = NULL))
} else if (opcode == 3) {
# Eingabe in Zelle schreiben (ein Parameter)
prog[prog[idx + 1] + 1] <- input
return(list(prog = prog, index = idx + 2, breaker = NULL))
} else if (opcode == 4) {
# Wert ausgeben (ein Parameter)
print(paste0("Ausgabe: ", prog[prog[idx + 1] + 1]))
return(list(prog = prog, index = idx + 2, breaker = NULL))
} else if (opcode == 99) {
# Programm beenden
# Wird nie ausgef端hrt, da die Abfrage in der Schleife schon auf 99 pr端ft und dann die
# Schleife stoppt
message("Programm erfolgreich beendet.")
return(list(prog = prog, index = idx, breaker = TRUE))
} else {
stop("Fehler!")
}
}
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
print(output[["index"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
print(output[["index"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 1, debug = TRUE)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
debug <- TRUE
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
output <- list(prog = vec, index = 1, input = 1)
debug <- TRUE
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
debug <- FALSE
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
# Teil 2
output <- list(prog = vec, index = 1, input = 5)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# print(output[["index"]])
if (output[["breaker"]]) { break }
}
input <- read_csv("aoc_data/day_5.csv",
col_names = FALSE)
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
source("intcode_computer_v2.R")
# Teil 2
output <- list(prog = vec, index = 1, input = 5)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
output <- list(prog = vec, index = 1, input = 5)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output[["prog"]]
output[["index"]]
output[["input"]]
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output[["prog"]][9]
output[["prog"]][3]
output[["prog"]][3] %% 1000 %/% 100
output[["prog"]][3 + 1]
output[["prog"]][output[["prog"]][3 + 1]]
output[["prog"]][output[["prog"]][3 + 1] + 1]
output[["prog"]][output[["prog"]][3 + 2] + 1]
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output
vec <- c(3,9,8,9,10,9,4,9,99,-1,8)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 9)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
debug <- FALSE
vec <- c(3,9,7,9,10,9,4,9,99,-1,8)
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,3,1108,-1,8,3,4,3,99)
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,3,1107,-1,8,3,4,3,99)
debug <- FALSE
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9)
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,3,1105,-1,9,1101,0,0,12,4,12,99,1)
output <- list(prog = vec, index = 1, input = 0)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
output <- list(prog = vec, index = 1, input = 1)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 8)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 9)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
output
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
debug <- TRUE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
output <- list(prog = vec, index = 1, input = 7)
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 7)
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
output
# Teil 2
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- TRUE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
debug <- FALSE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
source("intcode_computer_v2.R")
vec <- c(3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99)
debug <- FALSE
output <- list(prog = vec, index = 1, input = 7)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
# Teil 2
source("intcode_computer_v2.R")
input <- read_csv("aoc_data/day_5.csv",
col_names = FALSE)
# Teil 1
vec <- input %>%
slice(1) %>%
as.numeric()
output <- list(prog = vec, index = 1, input = 5)
# Schleife starten
while(TRUE) {
output <- intcode_comp(output[["prog"]], output[["index"]], output[["input"]])
if (output[["breaker"]]) { break }
}
